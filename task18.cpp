#include<iostream>
#include <bitset>
using namespace std;
//function returns 1 if no two 1 together, otherwise 0
int two_one_together(unsigned long a);
int main(){
	 unsigned long long x;
	cout<<"Enter x= ";
	cin>>x;
	cout<<"Binary value of x is=";
	cout << bitset<32U>(x) << endl;
	cout<<"The returning value ";
	cout<<two_one_together(static_cast<unsigned long> (x))<<endl;
	return 0;
}
int two_one_together(unsigned long a){
	int mask=0x01;
	int x,temp1,temp2;
	x=0;
	//function method of sorting checks bordering bits
	temp1=a & mask;
	temp2= a>>1 & mask;
	x=x | (temp1 & temp2);
	temp1=temp2;
	temp2=a>>2 & mask;
	x=x | (temp1 & temp2);
	temp1=temp2;
	temp2=(a>>3) & mask;
	x=x | (temp1 & temp2);
	temp1=temp2;
	temp2=(a>>4) & mask;
	x=x | (temp1 & temp2);
	temp1=temp2;
	temp2=(a>>5) & mask;
	x=x | (temp1 & temp2);
	temp1=temp2;
	temp2=(a>>6) & mask;
	x=x | (temp1 & temp2);
	temp1=temp2;
	temp2=(a>>7) & mask;
	x=x | (temp1 & temp2);
	temp1=temp2;
	temp2=(a>>8) & mask;
	x=x | (temp1 & temp2);
	temp1=temp2;
	temp2=(a>>9) & mask;
	x=x | (temp1 & temp2);
	temp1=temp2;
	temp2=(a>>10) & mask;
	x=x | (temp1 & temp2);
	temp1=temp2;
	temp2=(a>>11) & mask;
	x=x | (temp1 & temp2);
	temp1=temp2;
	temp2=(a>>12) & mask;
	x=x | (temp1 & temp2);
	temp1=temp2;
	temp2=(a>>13) & mask;
	x=x | (temp1 & temp2);
	temp1=temp2;
	temp2=(a>>14) & mask;
	x=x | (temp1 & temp2);
	temp1=temp2;
	temp2=(a>>15) & mask;
	x=x | (temp1 & temp2);
	temp1=temp2;
	temp2=(a>>16) & mask;
	x=x | (temp1 & temp2);
	temp1=temp2;
	temp2=(a>>17) & mask;
	x=x | (temp1 & temp2);
	temp1=temp2;
	temp2=(a>>18) & mask;
	x=x | (temp1 & temp2);
	temp1=temp2;
	temp2=(a>>19) & mask;
	x=x | (temp1 & temp2);
	temp1=temp2;
	temp2=(a>>20) & mask;
	x=x | (temp1 & temp2);
	temp1=temp2;
	temp2=(a>>21) & mask;
	x=x | (temp1 & temp2);
	temp1=temp2;
	temp2=(a>>22) & mask;
	x=x | (temp1 & temp2);
	temp1=temp2;
	temp2=(a>>23) & mask;
	x=x | (temp1 & temp2);
	temp1=temp2;
	temp2=(a>>24) & mask;
	x=x | (temp1 & temp2);
	temp1=temp2;
	temp2=(a>>25) & mask;
	x=x | (temp1 & temp2);
	temp1=temp2;
	temp2=(a>>26) & mask;
	x=x | (temp1 & temp2);
	temp1=temp2;
	temp2=(a>>27) & mask;
	x=x | (temp1 & temp2);
	temp1=temp2;
	temp2=(a>>28) & mask;
	x=x | (temp1 & temp2);
	temp1=temp2;
	temp2=(a>>29) & mask;
	x=x | (temp1 & temp2);
	temp1=temp2;
	temp2=(a>>30) & mask;
	x=x | (temp1 & temp2);
	temp1=temp2;
	temp2=(a>>31) & mask;
	x=x | (temp1 & temp2);
	return x^1;
}